# Generated by Django 3.1.1 on 2020-09-13 18:23

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('email', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Metrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ci', models.IntegerField(blank=True, null=True)),
                ('license', models.IntegerField(blank=True, null=True)),
                ('history', models.FloatField(blank=True, null=True)),
                ('management', models.IntegerField(blank=True, null=True)),
                ('documentation', models.FloatField(blank=True, null=True)),
                ('community', models.IntegerField(blank=True, null=True)),
                ('tests', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.TextField(max_length=100)),
                ('repository', models.TextField(max_length=100)),
                ('name', models.TextField(blank=True, null=True)),
                ('mainLanguage', models.TextField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('homepage', models.TextField(blank=True, null=True)),
                ('ownerAvatarUrl', models.TextField(blank=True, null=True)),
                ('forksCount', models.IntegerField(blank=True, null=True)),
                ('fork', models.BooleanField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('defaultBranch', models.TextField(blank=True, null=True)),
                ('createdAt', models.IntegerField(blank=True, null=True)),
                ('cloneUrl', models.TextField(blank=True, null=True)),
                ('fullname', models.TextField(blank=True, null=True)),
                ('hasWiki', models.BooleanField(blank=True, null=True)),
                ('key', models.IntegerField(blank=True, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('numFiles', models.IntegerField(blank=True, null=True)),
                ('archived', models.BooleanField(blank=True, null=True)),
                ('subscribersCount', models.IntegerField(blank=True, null=True)),
                ('watchersCount', models.IntegerField(blank=True, null=True)),
                ('updatedAt', models.IntegerField(blank=True, null=True)),
                ('stargazersCount', models.IntegerField(blank=True, null=True)),
                ('pushedAt', models.IntegerField(blank=True, null=True)),
                ('openIssues', models.IntegerField(blank=True, null=True)),
                ('metrics', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.metrics')),
            ],
            options={
                'unique_together': {('owner', 'repository')},
            },
        ),
        migrations.CreateModel(
            name='PullRequest',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('url', models.TextField(blank=True, null=True)),
                ('additions', models.IntegerField(blank=True, null=True)),
                ('assignee', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), size=None)),
                ('assignees', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), size=None)),
                ('authorAssociation', models.TextField(blank=True, null=True)),
                ('baseRefOid', models.TextField(blank=True, null=True)),
                ('baseRefName', models.TextField(blank=True, null=True)),
                ('baseRepository', models.JSONField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('changedFiles', models.IntegerField(blank=True, null=True)),
                ('closedAt', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('commits', models.IntegerField(blank=True, null=True)),
                ('createdAt', models.IntegerField(blank=True, null=True)),
                ('deletions', models.IntegerField(blank=True, null=True)),
                ('isDraft', models.BooleanField(blank=True, null=True)),
                ('headRefOid', models.TextField(blank=True, null=True)),
                ('headRefName', models.TextField(blank=True, null=True)),
                ('labels', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), size=None)),
                ('locked', models.BooleanField(blank=True, null=True)),
                ('maintainerCanModify', models.BooleanField(blank=True, null=True)),
                ('mergeable', models.TextField(blank=True, null=True)),
                ('merged', models.BooleanField(blank=True, null=True)),
                ('mergedAt', models.IntegerField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('updatedAt', models.IntegerField(blank=True, null=True)),
                ('author', models.JSONField(blank=True, null=True)),
                ('mergeCommit', models.TextField(blank=True, null=True)),
                ('mergedBy', models.JSONField(blank=True, null=True)),
                ('milestone', models.JSONField(blank=True, null=True)),
                ('activeLockReason', models.TextField(blank=True, null=True)),
                ('key', models.IntegerField(blank=True, null=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.repository')),
            ],
        ),
        migrations.CreateModel(
            name='MapIdentification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.IntegerField()),
                ('algorithm', models.TextField()),
                ('identification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.identification')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.repository')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('updatedAt', models.IntegerField(blank=True, null=True)),
                ('activeLockReason', models.TextField(blank=True, null=True)),
                ('milestone', models.JSONField(blank=True, null=True)),
                ('author', models.JSONField(blank=True, null=True)),
                ('labels', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), size=None)),
                ('title', models.TextField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
                ('assignee', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), size=None)),
                ('locked', models.BooleanField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('createdAt', models.IntegerField(blank=True, null=True)),
                ('authorAssociation', models.TextField(blank=True, null=True)),
                ('key', models.IntegerField(blank=True, null=True)),
                ('closedAt', models.IntegerField(blank=True, null=True)),
                ('comments', models.IntegerField(blank=True, null=True)),
                ('assignees', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), size=None)),
                ('reactions', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), size=None)),
                ('body', models.TextField(blank=True, null=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.repository')),
            ],
        ),
        migrations.AddField(
            model_name='identification',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.repository'),
        ),
        migrations.CreateModel(
            name='Commit',
            fields=[
                ('commit', models.TextField(primary_key=True, serialize=False)),
                ('adaptivePred', models.BooleanField(blank=True, null=True)),
                ('perfectivePred', models.BooleanField(blank=True, null=True)),
                ('isRefactorPred', models.BooleanField(blank=True, null=True)),
                ('parents', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), size=None)),
                ('author', models.TextField(blank=True, null=True)),
                ('authordate', models.TextField(blank=True, null=True)),
                ('commiter', models.TextField(blank=True, null=True)),
                ('commitdate', models.TextField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('files', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), size=None)),
                ('merge', models.TextField(blank=True, null=True)),
                ('correctivePred', models.BooleanField(blank=True, null=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.repository')),
            ],
        ),
    ]
